[[spi_ee]]

== Portable extensions in Java EE

[[beanmanager_ee]]

=== The +BeanManager+ object in Java EE

[[provider_ee]]

==== Obtaining a reference to the CDI container in Java EE

A Java EE container is required to provide a CDI provider that will allow access to the current container for any Java EE application or Java EE module which contains enabled beans.


[[init_events_ee]]

=== Addition to Container lifecycle events in Java EE

[[process_injection_point_ee]]

==== `ProcessInjectionPoint` event and EJB

When running in Java EE, the container must also fire an event for every injection point of every EJB session or message-driven bean.

[[process_injection_target_ee]]

==== `ProcessInjectionTarget` event

When running in Java EE, the container must also fire an event for every EJB session or message-driven bean.

[[process_bean_ee]]

==== `ProcessBean` event and EJB

In addition to definition given in <<process_bean>> the following apply:

* For a session bean with bean class `X`, the container must raise an event of type `ProcessSessionBean<X>`.

Resources are considered to be producer fields.

When running in Java EE, the interface `javax.enterprise.inject.spi.ProcessBean` is also a supertype of `javax.enterprise.inject.spi.ProcessSession` :

[source, java]
----
public interface ProcessSessionBean<X>
        extends ProcessManagedBean<Object> {
    public String getEjbName();
    public SessionBeanType getSessionBeanType();
}
----

* `getEjbName()` returns the EJB name of the session bean.
* `getSessionBeanType()` returns a `javax.enterprise.inject.spi.SessionBeanType` representing the kind of session bean.
